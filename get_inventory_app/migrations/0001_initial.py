# Generated by Django 5.1.1 on 2024-09-30 05:27

import django.db.models.deletion
import get_inventory_app.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CityDepModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=100, verbose_name='Город')),
                ('name_dep', models.CharField(max_length=350, verbose_name='Наименование организации')),
            ],
            options={
                'verbose_name': 'город/организация',
                'verbose_name_plural': 'города/организации',
                'db_table': 'admin_panel_app_citydepmodel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CommandNumberModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('command_number', models.IntegerField(verbose_name='Номер отдела/Сокращение')),
                ('command_name', models.CharField(max_length=150, verbose_name='Наименование отдела')),
                ('show', models.BooleanField(default=True, verbose_name='Отображать отдел')),
            ],
            options={
                'verbose_name': 'номер отдела',
                'verbose_name_plural': 'номера отделов',
                'db_table': 'ToDo_tasks_commandnumbermodel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContractModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_name', models.CharField(max_length=650, verbose_name='Номер договора')),
                ('contract_code', models.CharField(blank=True, max_length=500, null=True, verbose_name='Код договора')),
                ('show', models.BooleanField(default=True, verbose_name='Отображать договор')),
                ('show_in_print', models.BooleanField(default=False, verbose_name='Отображать только в печати')),
            ],
            options={
                'verbose_name': 'номер договора',
                'verbose_name_plural': 'номера договоров',
                'db_table': 'ToDo_tasks_contractmodel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CpeModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cpe_important', models.BooleanField(default=False, verbose_name='Главный за объект')),
            ],
            options={
                'verbose_name': 'ГИП',
                'verbose_name_plural': 'ГИПЫ',
                'db_table': 'ToDo_tasks_cpemodel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmployeeModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(max_length=150, verbose_name='Фамилия')),
                ('first_name', models.CharField(max_length=150, verbose_name='Имя')),
                ('middle_name', models.CharField(max_length=150, verbose_name='Отчество')),
                ('personnel_number', models.CharField(default=None, max_length=20, null=True, verbose_name='Табельный номер')),
                ('user_phone', models.IntegerField(blank=True, default=None, null=True, verbose_name='№ телефона внутренний')),
                ('right_to_sign', models.BooleanField(default=False, verbose_name='Право подписывать задания')),
                ('check_edit', models.BooleanField(default=True, verbose_name='Возможность редактирования задания')),
                ('can_make_task', models.BooleanField(default=True, verbose_name='Возможность выдавать задания')),
                ('cpe_flag', models.BooleanField(default=False, verbose_name='Флаг ГИП (техническая метка)')),
                ('mailing_list_check', models.BooleanField(default=True, verbose_name='Получать рассылку')),
                ('work_status', models.BooleanField(default=True, verbose_name='Сотрудник работает')),
            ],
            options={
                'verbose_name': 'сотрудник',
                'verbose_name_plural': 'сотрудники',
                'db_table': 'ToDo_tasks_employee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroupDepartmentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_dep_abr', models.CharField(max_length=10, verbose_name='Сокращенное название управления')),
                ('group_dep_name', models.CharField(max_length=250, verbose_name='Полное название управления')),
                ('show', models.BooleanField(default=True, verbose_name='Отображать отдел')),
            ],
            options={
                'verbose_name': 'управление',
                'verbose_name_plural': 'управления',
                'db_table': 'ToDo_tasks_groupdepartmentmodel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='JobTitleModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(max_length=200, verbose_name='Должность')),
            ],
            options={
                'verbose_name': 'должность',
                'verbose_name_plural': 'должности',
                'db_table': 'ToDo_tasks_jobtitlemodel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MoreDetailsEmployeeModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, null=True, upload_to=get_inventory_app.models.upload_to, verbose_name='Файл')),
                ('outside_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Внешняя почта')),
                ('mobile_phone', models.CharField(blank=True, max_length=30, null=True, verbose_name='Мобильный телефон')),
                ('date_birthday', models.DateField(blank=True, null=True, verbose_name='День рождения')),
                ('room', models.CharField(blank=True, max_length=30, null=True, verbose_name='Номер комнаты')),
                ('date_birthday_show', models.BooleanField(default=False, null=True, verbose_name='Отображать день рождения')),
                ('send_email_salary_blank', models.BooleanField(default=False, verbose_name='Отсылать расчетный листок')),
            ],
            options={
                'verbose_name': 'дополнительная информация по сотруднику',
                'verbose_name_plural': 'дополнительная информация по сотрудникам',
                'db_table': 'admin_panel_app_moredetailsemployeemodel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ObjectModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_name', models.CharField(default=None, max_length=250, verbose_name='Наименование объекта')),
                ('object_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='Код объекта')),
                ('show', models.BooleanField(default=True, verbose_name='Отображать объект')),
            ],
            options={
                'verbose_name': 'наименование объекта',
                'verbose_name_plural': 'наименования объектов',
                'db_table': 'ToDo_tasks_objectmodel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrdersModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.CharField(blank=True, max_length=10, null=True, verbose_name='Номер заказчика')),
                ('order_name', models.CharField(blank=True, max_length=250, null=True, verbose_name='Наименование заказчика')),
            ],
            options={
                'verbose_name': 'номер заказчика',
                'verbose_name_plural': 'номера заказчиков',
                'db_table': 'ToDo_tasks_ordersmodel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeneralInfoInventoryNumberModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_add', models.DateField(auto_now_add=True, verbose_name='Дата регистрации')),
                ('return_date', models.DateField(blank=True, null=True, verbose_name='Дата возврата')),
                ('employee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='get_inventory_app.employeemodel', verbose_name='Сотрудник')),
                ('object_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='get_inventory_app.objectmodel', verbose_name='Объект')),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='get_inventory_app.ordersmodel', verbose_name='Заказчик')),
            ],
            options={
                'verbose_name': 'общая информация об инвентарном номере',
                'verbose_name_plural': 'общая информация об инвентарных номерах',
            },
        ),
        migrations.CreateModel(
            name='CloseInventoryNumbersModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inventory_number', models.CharField(max_length=8, verbose_name='Закрытый инвентарный номер')),
                ('actual', models.BooleanField(default=True, verbose_name='Актуальный')),
                ('general_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='get_inventory_app.generalinfoinventorynumbermodel', verbose_name='Общая информация')),
            ],
            options={
                'verbose_name': 'закрытый инвентарный номер',
                'verbose_name_plural': 'закрытые инвентарные номера',
            },
        ),
        migrations.CreateModel(
            name='KTInventoryNumbersModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inventory_number', models.CharField(max_length=8, verbose_name='КТ инвентарный номер')),
                ('actual', models.BooleanField(default=True, verbose_name='Актуальный')),
                ('general_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='get_inventory_app.generalinfoinventorynumbermodel', verbose_name='Общая информация')),
            ],
            options={
                'verbose_name': 'коммерческий инвентарный номер',
                'verbose_name_plural': 'коммерческие инвентарные номера',
            },
        ),
        migrations.CreateModel(
            name='OpenInventoryNumbersModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inventory_number', models.CharField(max_length=8, verbose_name='Открытый инвентарный номер')),
                ('actual', models.BooleanField(default=True, verbose_name='Актуальный')),
                ('general_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='get_inventory_app.generalinfoinventorynumbermodel', verbose_name='Общая информация')),
            ],
            options={
                'verbose_name': 'открытый инвентарный номер',
                'verbose_name_plural': 'открытие инвентарные номера',
            },
        ),
    ]
